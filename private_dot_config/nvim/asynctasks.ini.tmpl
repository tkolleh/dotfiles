# vim: set fenc=utf-8 ft=dosini:

# -- Build file, defaults to <f9> --------------------------------------------------
[file-build]
# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:markdown,md,pandoc=/usr/local/bin/pandocomatic -o "$(VIM_FILENOEXT).html" -i "$(VIM_RELNAME)"

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

# -- Run file, defaults to <f10> --------------------------------------------------
[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:markdown,md,pandoc=bash {{ .chezmoi.homeDir }}/.bash_functions marked "$(VIM_FILEPATH)"

cwd=$(VIM_FILEDIR)

output=terminal

save=1

# -- Build markdown files-------------------------------------------------- 
[md-pdf-gt]

command:markdown,md,pandoc=/usr/local/opt/pandoc/bin/pandoc --verbose -f markdown-raw_tex --output="$(VIM_FILENOEXT).pdf" --include-in-header="{{ .chezmoi.homeDir }}/Documents/pandoc-basic.tex" --include-in-header="{{ .chezmoi.homeDir }}/Documents/pandoc-gatech-header.tex" --highlight-style zenburn --pdf-engine="xelatex" --bibliography="{{ .chezmoi.homeDir }}/Documents/bibliography.bib" "$(VIM_RELNAME)"
cwd=$(VIM_FILEDIR)
output=terminal

# save file before execute
save=1

[md-pdf]

command:markdown,md,pandoc= /usr/local/bin/pandocomatic -o "$(VIM_FILENOEXT).pdf" -i "$(VIM_RELNAME)"
cwd=$(VIM_FILEDIR)
output=terminal

# save file before execute
save=1

