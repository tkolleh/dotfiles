export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export JAVA_HOME=$(/usr/libexec/java_home -v 14)
export M2_HOME="$HOME/Tools/apache-maven-3.6.1"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export CURL_HOME="/usr/bin/curl"
export ICLOUD_DIR="/Users/tkolleh/Library/Mobile Documents/com~apple~CloudDocs/"

# Close shell with five presses of CTRL-D
export IGNOREEOF=5

# Github API Token for Homebrew
export HOMEBREW_GITHUB_API_TOKEN=4b351df2289942af94fdd3e78905aeda1eba0782

# NeoVim environment variables
export NVIM_PY2_HOME="/anaconda3/envs/nvim-py2/bin"
export NVIM_PY3_HOME="/anaconda3/envs/nvim-py3/bin"
export MYVIMRC="$XDG_CONFIG_HOME/nvim/init.vim"
export NVIM_SESSION="$XDG_CONFIG_HOME/sessions"
export LAST_NVIM_SESSION="$NVIM_SESSION/LastSession.vim"

# NeoVim as default editor
export EDITOR="nvim"

# Flutter SDK variables
export FLUTTER="$HOME/ws/flutter-sdk"

# Apache Spark environment variables
export SPARK_HOME="$HOME/tools/spark-2.3.3-bin-hadoop2.7"

# Golang home
export GOPATH=$(go env GOPATH)

export PATH="/usr/local/bin:/usr/local/lib:$PATH"

#
# My custom tools
# 
# Installed commands:
# - notes
# - plantuml
# - rgfz
#
### export GRAPHVIZ_DOT=/usr/local/bin/dot #Used for plantuml
export MARKDOWN_NOTES=$HOME/Documents/markdown-notes
export PATH="$PATH:$HOME/ws/bash-env-setup/apps"
export PATH="$PATH:$HOME/ws/manage-mmd-notes"

export PATH="$PATH:$JAVA_HOME/bin:$M2_HOME/bin:$FLUTTER/bin:$SPARK_HOME/bin:$GOPATH/bin"

# Load .bash_aliases if it exists
test -f $HOME/.bash_aliases && source $HOME/.bash_aliases

# Color manpages
man() {
	env \
		LESS_TERMCAP_mb=$(printf "\033[1;31m") \
		LESS_TERMCAP_md=$(printf "\033[1;31m") \
		LESS_TERMCAP_me=$(printf "\033[0m") \
		LESS_TERMCAP_se=$(printf "\033[0m") \
		LESS_TERMCAP_so=$(printf "\033[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\033[0m") \
		LESS_TERMCAP_us=$(printf "\033[1;32m") \
		man "$@"
}

#
# Load jenv automatically by adding
#
# note: Run command `jenv enable-plugin export` to set the JAVA_HOME
eval "$(jenv init -)"

#
# Load bash_completion if it exists
# https://github.com/bobthecow/git-flow-completion/wiki/Install-Bash-git-completion
#
test -f $(brew --prefix)/etc/bash_completion && source $(brew --prefix)/etc/bash_completion

#
# Load gradle-completion if it exists
# https://github.com/gradle/gradle-completion
#
test -f $(brew --prefix)/etc/bash_completion.d/gradle-completion.bash && source $(brew --prefix)/etc/bash_completion.d/gradle-completion.bash

#
# Load PS1, prompt command
# This sets the GIT_PROMPT_START and GIT_PROMPT_END as defined
# in the below bash-git-prompt project
#
test -f $HOME/ws/bash-env-setup/prompt_command.sh && source $HOME/ws/bash-env-setup/prompt_command.sh
#
# Add git prompt
# See https://github.com/magicmonty/bash-git-prompt
#
if [ -f "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh" ]; then
  __GIT_PROMPT_DIR=$(brew --prefix)/opt/bash-git-prompt/share
  GIT_1ROMPT_ONLY_IN_REPO=0
  GIT_PROMPT_THEME=Solarized
  source "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh"
fi

#
# Load Alacritty completions
#
test -f $HOME/ws/alacritty/extra/completions/alacritty.bash && source $HOME/ws/alacritty/extra/completions/alacritty.bash 

#
# Load command line fuzzy finder
# See: https://github.com/junegunn/fzf
#
test -f $HOME/.fzf.bash && source $HOME/.fzf.bash

#
# Check if the ripgrep and command line fuzzy finder are installed
# and available on path then; fzf + pt configuration
# Note: This must come after sourcing the fzf
#
if hash rg 2>/dev/null && hash fd 2>/dev/null && hash fzf 2>/dev/null; then 
    export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
    export FZF_DEFAULT_COMMAND='rg --color=never --ignore-case --hidden --files --no-ignore --no-ignore-global --follow'
    # export FZF_DEFAULT_OPTS="--bind '?:toggle-preview' --preview='less {-1}' --header-lines=1 --preview-window='right:50%:hidden'"
    export FZF_DEFAULT_OPTS="--bind '?:toggle-preview' --preview='less {-1}' --preview-window='right:50%:hidden'"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    # Search files
    export FZF_ALT_C_COMMAND='fd --type d --color=never --ignore-case --hidden --follow --exclude ".git" .'
    # Search recent commands
    export FZF_CTRL_R_OPTS="$FZF_DEFAULT_OPTS"
    # export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window up:2 --bind ?:toggle-preview"
    # export FZF_DEFAULT_OPTS="--preview 'rougify {}' --bind ?:toggle-preview"
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Load rbenv automatically by appending
# the following to ~/.bash_profile:
eval "$(rbenv init -)"


# Simple function to get git ignore defaults from the gitignore api
function gi() { curl -sL https://www.gitignore.io/api/$@ ;}


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/usr/local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

