# Timeout for commands executed by starship (in milliseconds)
add_newline = true
scan_timeout = 5
command_timeout = 5

# Order of modules on prompt
format = "[╭─](fg:main_clr)$cmd_duration$directory$all[╰](fg:main_clr)$character$status"

# Color palette for light/dark mode
palette = "dark"

[palettes.light] #default color palette
main_clr = "#9c64a6" # -- Directory chevron background
secondary_clr = "#ffebee" # -- Program background (git)
txt_clr = "#212121"   # -- Main text (paragraph)
light_txt_clr = "#f5f5f5" # -- Text for dark background (paragraph)
red_clr = "#b61827" # -- Warning and/or error color
mode_clr = "#b2dfdb" # -- Sky blue / green color
term_bg_clr = "#ffffff" # -- Background color

[palettes.dark]
main_clr = "#9c64a6" # -- Directory chevron background
secondary_clr = "#ffebee" # -- Program background (git)
txt_clr = "#212121"   # -- Main text (paragraph)
red_clr = "#b61827" # -- Warning and/or error color
mode_clr = "#b2dfdb" # -- Sky blue / green color
term_bg_clr = "#000000" # -- Background color

[character]
success_symbol = "[](main_clr)"
error_symbol = " [](bold red_clr)"
vicmd_symbol = " [](mode_clr)"

[directory]
truncation_symbol = ""
truncate_to_repo = false
truncation_length = 100
fish_style_pwd_dir_length = 1
style = "bg:main_clr fg:term_bg_clr"
format = "[]($style)[$path]($style)[$read_only]($read_only_style)[](inverted $style) "

[cmd_duration]
min_time = 5000
show_milliseconds = true
format = "[ $duration]($style)"

[jobs]
symbol = " "

# harware config
[battery]
disabled = true
unknown_symbol = ""
empty_symbol = ""
discharging_symbol = ""
charging_symbol = ""
full_symbol = ""

[[battery.display]]
threshold = 10
style = "bold fg:red_clr"

[[battery.display]]
threshold = 30
style = "fg:#ff8800"

[[battery.display]]
threshold = 50
style = "fg:yellow"

[memory_usage]
disabled = true
symbol = " "

[time]
disabled = true
style = "light_txt_clr"
format = "[](bg:$style fg:txt_clr)[🕙 $time](bg:$style fg:term_bg_clr)[](fg:$style)"

[status]
disabled = false
symbol = "  "
format = "[$status$symbol](fg:red_clr)"

# VCS
[git_branch]
symbol = "  "
style = "bg:secondary_clr fg:term_bg_clr"
format = "\b[]($style)[$symbol$branch](bg:secondary_clr fg:txt_clr)[](inverted $style) "

[git_commit]
style = "#ebfffc"
format = "\b[ ﰖ $hash](fg:term_bg_clr bg:$style)[](fg:$style) "

[git_state]
am = "APPLYING-MAILBOX"
am_or_rebase = "APPLYING-MAILBOX/REBASE"
style = "#ebfffc"
format = "\b\b[ \\($state( $progress_current/$progress_total)\\)](fg:term_bg_clr bg:$style)[](fg:$style) "

[git_status]
style = "#ebfffc"
format = "($conflicted$staged$modified$renamed$deleted$untracked$stashed$ahead_behind\b )"
conflicted = "[ ](fg:88)[   ${count} ](fg:term_bg_clr bg:88)[ ](fg:88)"
#staged = "[M$count ](fg:green)"
#modified = "[M${count} ](fg:red_clr)"
#renamed = "[R${count} ](fg:208)"
deleted = "[ ${count} ](fg:208)"
untracked = "[?${count} ](fg:red_clr)"
stashed = " ${count} "
ahead = "[ ${count} ](fg:purple)"
behind = "[ ${count} ](fg:yellow)"
diverged = "[](fg:88)[  נּ ](fg:term_bg_clr bg:88)[ ${ahead_count} ](fg:purple bg:88)[ ${behind_count} ](fg:yellow bg:88)[ ](fg:88)"

[shlvl]
disabled = false
style = "fg:bright-blue"
symbol = " "

# techno specific
[aws]
disabled = true
symbol = " "

[gcloud]
disabled = true
symbol = " "

[conda]
symbol = " "
ignore_base = true
format = "[$symbol$environment]($style) "
disabled = false
truncation_length = 10


[dart]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[java]
symbol = " "
format = "[${symbol}(${version} )]($style) "

[scala]
format = "[${symbol}(${version} )]($style) "

[nix_shell]
symbol = " "

[nodejs]
symbol = " "
format = "[$symbol($version )]($style) "

[php]
symbol = " "

[python]
symbol = " "
format = "[${symbol}${pyenv_prefix}(${version} )(($virtualenv) )]($style) "

[ruby]
symbol = " "

[rust]
symbol = " "
style = "fg:#ffa07a"
