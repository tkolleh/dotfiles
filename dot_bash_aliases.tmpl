# -*-mode:bash-*- vim:ft=bash

# ~/.bash_aliases
# =============================================================================
# Shell aliases sourced by `~/.bashrc` and `~/.zshrc`.
#
# OSTYPE values used:
#     - darwin: macOS
#     - cygwin: Cygwin POSIX-compatible environment for Windows
#     - mingw: MinGW Minimalist GNU for Windows
#     - msys: MinGW Lightweight shell and GNU utilities for Windows

# shellcheck shell=bash

# Redefine standard commands to improve their behavior
# -----------------------------------------------------------------------------
#

#
# Alias helper functions
#
function removeAlias () {
  # TODO: use awk here
  CMDTYPE=$(type "$1") 
  case $CMDTYPE in
    *"alias"*)
      unalias $1 2> >(grep -Ev 'no such hash table element' >&2)
    ;;
    *"function"*)
      echo -e "\u001b[34mError: alias is a function\u001b[0m"
    ;;
    *"not found"*)
    ;;
    *)
      echo -e "Error: unknown command type for $1 return message is '$CMDTYPE'"
    ;;
  esac
}
function setAlias () {
  alias "$1" 2>/dev/null 1>/dev/null || alias "$1"="$2"
}
function replaceAlias () {
  removeAlias "$1"
  setAlias "$1" "$2"
}


# -- Local navigation --------------------------------------------------
replaceAlias ll "exa --time modified --all --binary --git --header --long --color=always "
replaceAlias lt "exa --long --tree --level=3 "

# -- Git -------------------------------------------------- 
removeAlias grmci
function grmci () {
  # TODO: Function needs to be reworked doesn't really do what I want
  # Remove cached files that have been ignored by git locally or globally.
  git ls-files --others | xargs -n1 -I '{}' git rm --cached --quiet --ignore-unmatch -- ./{}
}
#
# replaceAlias gts "git --no-pager branch --color=always -vva --sort=-committerdate | head -n 8 && git status && git status -b --ignored | gawk '/Ignored\s+files:/{x=NR+8} (NR<=x) {print}'"
#
replaceAlias gts "git log --oneline --pretty='%Cred%h%Creset -%C(auto)%d%Creset %<(50,trunc)%s %Cgreen(%cr) %C(bold blue)<%an>%Creset' -5 && echo "" && git status && echo "" && git status -b --ignored | gawk '/Ignored\s+files:/{x=NR+8} (NR<=x) {print}'"
replaceAlias gtsp git-extended-status
replaceAlias gcm "git commit -a -S -m"
replaceAlias glog "git log --oneline --decorate --graph --show-signature"
replaceAlias gloga "git log --oneline --decorate --graph --show-signature --all"
replaceAlias gwch "git whatchanged -p --abbrev-commit --pretty=medium"
replaceAlias gcd "git checkout development"

# -- (neo)vim -------------------------------------------------- 
setAlias vim "lvim"

# -- miscellaneous --------------------------------------------------

setAlias ranger='TERM=xterm-256color ranger'

# Reloads the configuration.
if [ -n "$ZSH_VERSION" ]; then
    setAlias resource='source $HOME/.zshrc'
else
    setAlias resource='source $HOME/.bash_profile'
fi


setAlias note 'cd $MARKDOWN_NOTES && lvim -c "NV!"'
setAlias gradle "TERM=xterm ./gradlew"

setAlias lldb "PATH=/usr/bin:$PATH lldb"
setAlias pandoc "/usr/local/opt/pandoc/bin/pandoc"
setAlias subl "/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
# alias mvn 2>/dev/null >/dev/null || alias mvn='jenv exec mvn'

setAlias chezmoidelta "chezmoi source pull -- --rebase && chezmoi diff | delta"
setAlias ipython "EDITOR=lvim ipython"

setAlias noyotoken "gcloud auth login --brief && gcloud auth print-identity-token"

setAlias trash_pycharm_remote_resources "trash ~/Library/Caches/JetBrains/PyCharm2021.2/remote_sources/*"

# -- configuration paths ------------------------------------------------------

# Navigates to Chezmoi's local repo.
if command -v chezmoi > /dev/null; then
    if [[ "$OSTYPE" =~ ^(cygwin|mingw|msys) ]]; then
        # shellcheck disable=SC2046,SC2139
        setAlias chezmoiconf="cd $(chezmoi source-path | tr '\\/' '/' | tr -d ':' | awk '{print "/"$1}')"
    else
        setAlias chezmoiconf='cd $(chezmoi source-path)'
    fi
else
    setAlias chezmoiconf='cd $HOME/.local/share/chezmoi'
fi
