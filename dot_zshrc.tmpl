# -*-mode:sh-*- vim:ft=zsh
#
# ~/.zshrc
# =============================================================================
#
#
zmodload zsh/zprof

# Hide default user from local prompt.
export DEFAULT_USER="${USER}"

# Automatically update without prompting.
export DISABLE_UPDATE_PROMPT="false"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Reduce delay of loading the editor
# $KEYTIMEOUT controls the number of milliseconds that must pass
# before a key press is read.
export KEYTIMEOUT=1

# -- Plugins --------------------------------------------------
#
# Install zpm-zsh
if [[ ! -f ~/.zpm/zpm.zsh ]]; then
  git clone --recursive https://github.com/zpm-zsh/zpm ~/.zpm
fi
source ~/.zpm/zpm.zsh

# Pull in OMZ (doesn't actually source anything)
zpm load @omz

zpm load                         \
  @omz/lib/functions             \
  @omz/lib/prompt_info_functions \
  @omz/lib/git                   \
  @omz/lib/compfix               \
  @omz/lib/grep                  \
  @omz/lib/termsupport           \
  @omz/lib/spectrum              \
  @omz/lib/history               \
  @omz/lib/key-bindings          \
  @omz/lib/completion

# Load some OMZ plugins and theme
zpm load                  \
  @omz/git                \
  @omz/colored-man-pages  \
  @omz/vi-mode

VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true
bindkey -M viins 'jk' vi-cmd-mode       # this remaps `jk` to command mode
bindkey -M vicmd 'V' edit-command-line  # this remaps `vv` to `V` (but overrides `visual-mode`)

# Plugins for local host
zpm if-not ssh load                                   \
  zdharma-continuum/fast-syntax-highlighting          \
  zpm-zsh/zsh-history-substring-search                \
  zpm-zsh/zsh-autosuggestions,async                   \
  zsh-users/zsh-completions,async                     \
  zpm-zsh/zsh-better-npm-completion,async

autoload -U compinit && compinit

# Disable autosuggestion for large buffers.
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE="50"

# Enable aynchronous mode.
export ZSH_AUTOSUGGEST_USE_ASYNC=true

# Bind keys for zsh-history-substring-search. Plugin must be loaded
# after fast-syntax-highlighting.
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

if (( ${+commands[conda]} )); then
    zpm load @github/esc/conda-zsh-completion
    export CONDA_ENVS="/usr/local/anaconda3/envs"

    conda_path="$(whence -cp conda)"
    #
    # >>> conda initialize >>>
    #
    __conda_setup="$($conda_path 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
            . "/opt/anaconda3/etc/profile.d/conda.sh"
        else
            export PATH="/opt/anaconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
    #
    # <<< conda initialize <<<
    #
fi

if (( ${+commands[fd]} )) && (( ${+commands[rg]} )) && (( ${+commands[fzf]} )) && (( ${+commands[bat]} )); then
    export FZF_DEFAULT_COMMAND='fd --type f --color=never --ignore-case --no-ignore --hidden --follow'
    export FZF_DEFAULT_OPTS="
    --bind 'f1:execute(bat --paging=always --color=always {})'
    --bind 'f2:execute($EDITOR {})+abort'
    --bind 'ctrl-y:execute-silent(echo -n {} | pbcopy)+abort'
    --bind 'ctrl-z:toggle-up'
    --bind '?:toggle-preview'
    --preview='bat --number --color=always {} | head -700' --preview-window='right:50%:hidden'
    --color header:italic
    --header '<CTRL-Y>:copy - <F2>:open - <tab|CTRL-Z>:select'"

    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

    # Search for files
    export FZF_ALT_C_COMMAND='fd --type d --color=never --no-ignore --ignore-case --hidden --follow '

    # Search recent commands
    export FZF_CTRL_R_OPTS="$FZF_DEFAULT_OPTS"
fi

# Load custom code from separate configuration file.
if [[ -f "$HOME"/.zsh_functions ]]; then source "$HOME"/.zsh_functions; fi

if [[ -f "$HOME"/.host_functions.zsh ]]; then source "$HOME"/.host_functions.zsh; fi

# Load aliases
# TODO why is this not working in warp?
if [[ -a "$HOME"/.zsh_aliases ]]; then
  source "$HOME"/.zsh_aliases
fi

# -- Prompt styles ----------------------------------
#
# Light mode is the default. Check if apple settings are for darkmode
if [[ -f "$HOME"/.zsh_dark-notify.zsh ]]; then
  source "$HOME"/.zsh_dark-notify.zsh
  set_terminal_to_dark_mode
  # TODO use evry and background
  # while :; do
  #   (( ${+commands[dark-notify]} )) && dark-notify -c '$HOME/.zsh_dark-notify.zsh'
  # done &
fi

# Starship cross-shell prompt
#
# Install starship
if (( ${+commands[starship]} )); then
  export STARSHIP_LOG=error
  eval "$(starship init zsh)"
fi

if (( ${+commands[cs]} )); then
  # Scala application manager
  # Add coursier bin directory to PATH
  eval "$(cs install --env)"

  # Define JAVA_HOME and add it to the PATH. Assign existing JAVA_HOME to CS_FORMER_JAVA_HOME
  {{ if (eq .chezmoi.username .chezmoi.config.data.work_username )}}
  JAVA_HOME="$(cs java-home --architecture arm64 --jvm {{ .chezmoi.config.data.work_java_version }})"
  {{ else }}
  JAVA_HOME="$(cs java-home --architecture arm64 --jvm {{ .chezmoi.config.data.sys_java_version }})"
  {{ end }}
  export PATH="$JAVA_HOME/bin:$PATH"
fi

#
# Alternative to cd
#
# The default command is `z` add the `--cmd cd` option to
# replaces `cd` command.
if (( ${+commands[zoxide]} )); then
  export _ZO_ECHO=1
  eval "$(zoxide init zsh)"
else
  echo "zoxide not found"
fi

if (( ${+commands[atuin]} )); then
  eval "$(atuin init zsh)"
fi

if (( ${+commands[git-machete]} )); then
  eval "$(git machete completion zsh)"
fi

if (( ${+commands[scala-cli]} )); then
  # >>> scala-cli completions >>>
  fpath=("/Users/tkolleh/Library/Application Support/ScalaCli/completions/zsh" $fpath)
  compinit
fi


if (( ${+commands[poetry]} )); then
  # TODO: Move these to ZSH_CUSTOM similiar to how oh-my-zsh does it.
  # See: https://github.com/ohmyzsh/ohmyzsh/blob/0d0042aad33562877dffd12baa6fe86e40642241/oh-my-zsh.sh#L16-L20
  #
  if [[ -z "$HOME"/.poetry_completions.zsh ]]; then
    poetry completions bash > "$HOME"/.poetry_completions.zsh
  fi
  source "$HOME"/.poetry_completions.zsh
fi

export CURL_HOME="$(brew --prefix curl)"

export ICLOUD_DIR="$HOME/Library/Mobile Documents/com~apple~CloudDocs/"
export CHEZMOI_SOURCE_PATH="$(chezmoi source-path)"

# Add JetBrains toolbox scripts to path
export PATH="$HOME/.local/bin:$PATH"

if (( ${+commands[go]} )); then
  export PATH="$(go env GOPATH)"/bin:$PATH.
fi

# Load Fuzzy finder completions and keybindings 
if [[ -f "$HOME"/.fzf.zsh ]]; then source "$HOME"/.fzf.zsh; fi

# MacOS alerting from terminal
# https://github.com/vjeantet/alerter?tab=readme-ov-file
if [[ -f /opt/alerter/bin/alerter ]]; then
  export PATH="$PATH:/opt/alerter/bin"
fi

export HELIX_RUNTIME=/Users/tkolleh/IdeaProjects/helix/runtime
export PATH="$PATH:/Users/tkolleh/.cargo/bin"
