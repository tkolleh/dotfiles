# -*-mode:sh-*- vim:ft=zsh
#
# ~/.zshrc
# =============================================================================
#
#
# Hide default user from local prompt.
export DEFAULT_USER="${USER}"

# Disable autosuggestion for large buffers.
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE="20"

# Enable aynchronous mode.
export ZSH_AUTOSUGGEST_USE_ASYNC=true

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Close shell with five presses of CTRL-D
export IGNOREEOF=5

# -- Utilities -----------------------------------------------
# TODO: Move utilities to shared utilitie functions script
#
# usage: Print path to command if exist
function cmd_path() {
  if [[ $ZSH_VERSION ]]; then
    whence -cp "$1" 2> /dev/null
  else  # bash
     type -P "$1"  # No output if not in $PATH
  fi
}


# -- Prompt --------------------------------------------------
# Starship cross-shell prompt
# Install starship
eval "$(starship init zsh)"

# -- Plugins -------------------------------------------------- 
# Install zpm-zsh
if [[ ! -f ~/.zpm/zpm.zsh ]]; then
  git clone --recursive https://github.com/zpm-zsh/zpm ~/.zpm
fi
source ~/.zpm/zpm.zsh

# zsh-vi-mode
function zvm_config() {
    # Only changing the escape key to `jk` in insert mode, we still
    # keep using the default keybindings `^[` in other modes
    ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
}
# The plugin will auto execute this zvm_after_init function
function zvm_after_init() {
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
}
zpm load @github/jeffreytse/zsh-vi-mode


# Pull in OMZ (doesn't actually source anything)
zpm load @omz

# Load any OMZ libraries we want or that OMZ plugins require
zpm load                    \
  @omz-lib/compfix      \
  @omz-lib/completion   \
  @omz-lib/directories  \
  @omz-lib/functions    \
  @omz-lib/git          \
  @omz-lib/grep         \
  @omz-lib/history      \
  @omz-lib/key-bindings \
  @omz-lib/misc         \
  @omz-lib/spectrum

  # Load some OMZ plugins and theme
  zpm load                  \
    @omz/git                \
    @omz/colored-man-pages

#
# all other plugins
#
## Prerequisites:
fzf_path="$(brew --prefix fzf)"
jq_path="$(brew --prefix jq)"
rg_path="$(brew --prefix rg)"
conda_path=$(cmd_path conda)
npm_path="$(brew --prefix npm)"
z_path="$(brew --prefix z.lua)"

if [[ -n npm_path ]]; then
    zpm load @github/lukechilds/zsh-better-npm-completion
fi
if [[ -n conda_path ]]; then
    zpm load @github/esc/conda-zsh-completion
fi
if [[ -n fzf_path && -n jq_path && -n rg_path ]]; then
    zpm load @github/unixorn/fzf-zsh-plugin    
fi
if [[ -n z_path ]]; then
    eval "$(lua /usr/local/opt/z.lua/share/z.lua/z.lua --init zsh)"
fi

#
# -- User configuration -------------------------------------------------
#

#
# Check if the ripgrep and command line fuzzy finder are installed
# and available on path then; fzf + pt configuration
# Note: This must come after sourcing the fzf
#
if hash rg 2>/dev/null && hash fd 2>/dev/null && hash fzf 2>/dev/null && hash bat 2>/dev/null; then 
    export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

    # export FZF_DEFAULT_COMMAND='rg --color=never --ignore-case --hidden --files --no-ignore --no-ignore-global --follow '
    export FZF_DEFAULT_COMMAND='fd --type f --color=never --ignore-case --no-ignore --hidden --follow'

    export FZF_DEFAULT_OPTS="--bind 'f1:execute(bat --paging=always --color=always {}),f2:execute(lvim {})+abort,ctrl-y:execute-silent(echo {} | pbcopy)+abort' --bind '?:toggle-preview' --preview='bat --number --color=always {} | head -700' --preview-window='right:50%:hidden'"

    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

    # Search for files
    export FZF_ALT_C_COMMAND='fd --type d --color=never --no-ignore --ignore-case --hidden --follow '

    # Search recent commands
    export FZF_CTRL_R_OPTS="$FZF_DEFAULT_OPTS"
fi

delta_path=$(cmd_path delta)

if [[ -n delta_path ]]; then
  export BATDIFF_USE_DELTA=true
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME"/google-cloud-sdk/path.zsh.inc ]; then . "$HOME"/google-cloud-sdk/path.zsh.inc; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME"/google-cloud-sdk/completion.zsh.inc ]; then . "$HOME"/google-cloud-sdk/completion.zsh.inc; fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


if [[ -n "$(brew --prefix asdf)" ]]; then
    zpm load @omz-lib/asdf

    export JAVA_HOME="$(asdf where java $(asdf current java | awk '{ print $2 }'))"
    export SCALA_HOME="$(asdf where scala $(asdf current scala | awk '{ print $2 }'))"
    export SBT_HOME="$(asdf where sbt $(asdf current sbt | awk '{ print $2 }'))"
    if [[ -d "$JAVA_HOME"/bin ]]; then
      export PATH="$JAVA_HOME/bin:$SCALA_HOME/bin:$SBT_HOME/bin:$PATH"
    fi
fi

# TODO: move to aliases (zshell specific dir)
# Load alias definitions from separate configuration file.
if [[ -a "$HOME"/.bash_aliases ]]; then
    source "$HOME"/.bash_aliases
fi

# Load custom code from separate configuration file.
if [[ -a "$HOME"/.bash_functions ]]; then
    source "$HOME"/.bash_functions
fi
