# yaml-language-server: $schema=https://raw.githubusercontent.com/espanso/espanso/dev/schemas/match.schema.json# espanso match file

# For a complete introduction, visit the official docs at: https://espanso.org/docs/

# You can use this file to define the base matches (aka snippets)
# that will be available in every application when using espanso.

# Matches are substitution rules: when you type the "trigger" string
# it gets replaced by the "replace" string.
matches:
  # Simple text replacements
  - trigger: ":espanso"
    replace: "Hi there!"


  # Dynamic replacements

  - triggers: [":ip", ":ip4"]
    label: "Internal IPv4 address"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            ip -4 addr show | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}' | cut -d'/' -f1

  - triggers: [":ip", ":ip6"]
    label: "Internal IPv6 address"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            ip -6 addr show | grep "inet6" | grep -v " fe80::" | awk '{print $2}' | cut -d'/' -f1

  - triggers: [":ip", ":pub-ip"]
    label: "Public IPv4 address"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "echo -n $(dig @resolver1.opendns.com ANY myip.opendns.com +short)"

  - trigger: ":date"
    label: "Current date"
    replace: "{{output}}"
    vars:
      - name: output
        type: date
        params:
          format: "%m/%d/%Y"

  - trigger: ":uuid"
    label: "128-bit value guaranteed to be unique over both space and time"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "uuidgen"

  # And much more! For more information, visit the docs: https://espanso.org/docs/
